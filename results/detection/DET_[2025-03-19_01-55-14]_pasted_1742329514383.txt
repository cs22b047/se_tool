==================>      SNIPPETS DETECTED      <========================
|                                                                       |
|           (!) VULN CODE : Vulnerable code snippets detected           |
|           ==> SAFE CODE : Safe code snippet                           |
|                                                                       |
|                 [XXX s] : Execution Time per snippet                  |
|                                                                       |
=========================================================================

==> SAFE CODE [ 0.23692083358764648 s ] : werimport os 

==> SAFE CODE [ 0.2102820873260498 s ] : import requests 

==> SAFE CODE [ 0.22063732147216797 s ] : CLIENT_ID = 'f3YxXmM9v0sD3wfR-plE8w' 

==> SAFE CODE [ 0.2814979553222656 s ] : SECRET_KEY = 'ifDdfjs-SGN76ZN_qzpjCB8UvjMJ7w' 

==> SAFE CODE [ 0.25808143615722656 s ] : auth = requests.auth.HTTPBasicAuth(CLIENT_ID, SECRET_KEY) 

==> SAFE CODE [ 0.23386645317077637 s ] : data = { 

==> SAFE CODE [ 0.2472245693206787 s ] : 'grant_type' : 'password', 

==> SAFE CODE [ 0.24936485290527344 s ] : 'username' : '_dwightshrute', 

==> SAFE CODE [ 0.20654916763305664 s ] : 'password' : 'beets#685' 

==> SAFE CODE [ 0.1989912986755371 s ] : } 

==> SAFE CODE [ 0.23044252395629883 s ] : headers = {'User-Agent' : 'MyAPI/0.0.1'} 

==> SAFE CODE [ 0.24106884002685547 s ] : res = requests.post('https://www.reddit.com/api/v1/access_token', 

==> SAFE CODE [ 0.23819208145141602 s ] : auth=auth, data=data, headers=headers) 

==> SAFE CODE [ 0.21391749382019043 s ] : TOKEN = res.json()['access_token'] 

==> SAFE CODE [ 0.17046427726745605 s ] : headers['Authorization'] = f'bearer {TOKEN}' 

==> SAFE CODE [ 0.24215316772460938 s ] : res = requests.get('https://oauth.reddit.com/r/wallpaper/hot', 

==> SAFE CODE [ 0.22814679145812988 s ] : headers=headers) 

==> SAFE CODE [ 0.23933005332946777 s ] : import random 

(!) VULN CODE [ 0.25391483306884766 s ] , Cryptographic Failures : top_post = res.json()['data']['children'][random.randint(0,9)]['data'] 

==> SAFE CODE [ 0.231583833694458 s ] : # Extract the first image URL 

==> SAFE CODE [ 0.21943092346191406 s ] : if 'media_metadata' in top_post: 

==> SAFE CODE [ 0.2023468017578125 s ] : image_url = next(iter(top_post['media_metadata'].values()))['s']['u'].replace('&amp;', '&') 

==> SAFE CODE [ 0.21953439712524414 s ] : elif 'url_overridden_by_dest' in top_post: 

==> SAFE CODE [ 0.2064197063446045 s ] : image_url = top_post['url_overridden_by_dest'] 

==> SAFE CODE [ 0.23593592643737793 s ] : else: 

==> SAFE CODE [ 0.1603379249572754 s ] : image_url = None 

==> SAFE CODE [ 0.2170088291168213 s ] : # Define the directory 

==> SAFE CODE [ 0.20065760612487793 s ] : dir_name = "wallpapers 

==> SAFE CODE [ 0.2347102165222168 s ] : os.makedirs(dir_name, exist_ok=True) 

==> SAFE CODE [ 0.22962021827697754 s ] : # Download and save the first image 

==> SAFE CODE [ 0.23192119598388672 s ] : if image_url: 

==> SAFE CODE [ 0.22608733177185059 s ] : response = requests.get(image_url, stream=True) 

==> SAFE CODE [ 0.21979069709777832 s ] : response.raise_for_status() 

==> SAFE CODE [ 0.23193717002868652 s ] : file_name = os.path.join(dir_name, "top_wallpaper.jpg") 

==> SAFE CODE [ 0.22395038604736328 s ] : with open(file_name, 'wb') as f: 

==> SAFE CODE [ 0.2095167636871338 s ] : for chunk in response.iter_content(chunk_size=8192): 

==> SAFE CODE [ 0.18065404891967773 s ] : f.write(chunk) 

==> SAFE CODE [ 0.2011563777923584 s ] : print(f"Image saved to {file_name}") 

==> SAFE CODE [ 0.25428318977355957 s ] : else: 

==> SAFE CODE [ 0.23652935028076172 s ] : print("No images found in the top post.") 

==> SAFE CODE [ 0.24565434455871582 s ] : def change_wallpaper_linux(image_path): 

==> SAFE CODE [ 0.1953413486480713 s ] : # Use gsettings to change the wallpaper on GNOME-based systems 

==> SAFE CODE [ 0.17789077758789062 s ] : command = "gsettings set org.gnome.desktop.background picture-uri-dark file://"+image_path 

==> SAFE CODE [ 0.24964547157287598 s ] : os.system(command) 

==> SAFE CODE [ 0.24681901931762695 s ] : if __name__ == "__main__": 

==> SAFE CODE [ 0.23744869232177734 s ] : image_path = os.path.abspath("/home/tilak/wallpapers/top_wallpaper.jpg") # Replace with the image path 

==> SAFE CODE [ 0.18861770629882812 s ] : change_wallpaper_linux(image_path) 

==> SAFE CODE [ 0.21272659301757812 s ] : print("Wallpaper changed") 





=================>          DATASET SIZE         <=================

#DimTestSet: 48 



=================>    FINAL RESULTS DETECTION    <=================

#TotalVulnerabilities: 1 

#SafeCode: 47 

Vulnerability Rate: 2.08333 % 



=================>        OWASP CATEGORIES       <=================

#Injection: 0 

#Cryptographic Failures: 1 

#Security Misconfiguration: 0 

#Broken Access Control: 0 

#Identification and Authentication Failures: 0 

#Security Logging and Monitoring Failures: 0 

#Insecure Design: 0 

#SSRF: 0 

#Software and Data Integrity Failures: 0 



=================>        EXECUTION TIME        <=================

Runtime: 11.682275772094727 s 

Average runtime per snippet: 0.243381 s 

